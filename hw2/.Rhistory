facet_grid(to_country ~ from_country)
scandinavia |>
ggplot(aes(x = year)) +
geom_line(aes(y = jury_points)) +
geom_line(aes(y = tele_points, linetype = "dashed")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
geom_line(aes(y = jury_points)) +
geom_line(aes(y = tele_points, linetype = "dashed")) +
facet_grid(from_country ~ to_country)
votes_complete |>
distinct(round)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023)
geom_line(aes(y = jury_points)) +
geom_line(aes(y = tele_points, linetype = "dashed")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points)) +
geom_line(aes(y = tele_points, linetype = "dashed")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points, linetype = "Solid Line"), size = 1) +
geom_line(aes(y = tele_points, linetype = "Dashed Line"), size = 1) +
scale_linetype_manual(name = "Line Type", values = c("Solid Line" = "solid", "Dashed Line" = "dashed")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points, linetype = "Solid Line")) +
geom_line(aes(y = tele_points, linetype = "Dashed Line")) +
scale_linetype_manual(name = "Line Type", values = c("Solid Line" = "solid", "Dashed Line" = "dashed")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points, linetype = "Solid Line")) +
geom_line(aes(y = tele_points, linetype = "Dashed Line")) +
scale_linetype_manual(name = "Line Type", values = c("Solid Line" = "solid", "Dashed Line" = "dotted")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points, linetype = "Solid Line")) +
geom_line(aes(y = tele_points, linetype = "Dashed Line")) +
scale_linetype_manual(name = "Line Type", values = c("Solid Line" = "solid", "Dashed Line" = "dashed")) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = "dotted") +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 1) +
geom_point(aes(y = tele_points), shape = 22) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country)
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country) +
labs(x = "point_total",
y = "year") +
scale_shape_manual(name = "Legend", values = c("Points" = 1)) +
scale_color_manual(name = "Legend", values = c("Points" = "black", "Lines" = "red"))
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16, linetype = 1) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country) +
labs(x = "point_total",
y = "year") +
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16, linetype = 1) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country) +
labs(x = "point_total",
y = "year")
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total") +
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total")
load("tmax_tmin_prcp.Rda")
tmax_tmin_prcp
load("tmax_tmin_prcp.Rda")
tmax_tmin_prcp
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total")+
theme(legend.position = "top")
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "top") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total")
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "bottom") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total")
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "bottom") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total") +
plt+geom_line()
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "bottom") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total")
plt+geom_line()
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "bottom") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total") +
scale_color_manual(name = "Legend", values = c("Combined" = "black")) +
theme(legend.position = "right")
load("votes.Rda")
votes |>
glimpse()
library(dplyr)
library(ggplot2)
library(tidyverse)
library(janitor)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(janitor)
load("votes.Rda")
votes |>
glimpse()
votes_complete <- votes |>
filter(!is.na(tele_points) & !is.na(jury_points))
unique_years <- votes_complete |>
distinct(year) |>
nrow()
unique_years
votes_complete_agg <- votes_complete |>
group_by(year, from_country, to_country) |>
summarise(
tele_points = sum(tele_points, na.rm = TRUE),
jury_points = sum(jury_points, na.rm = TRUE)
)
votes_complete_agg
to_poland <- votes_complete_agg |>
filter(to_country == 'Poland') |>
group_by(from_country) |>
summarise(jury_points = sum(jury_points, na.rm = TRUE)) |>
arrange(desc(jury_points)) |>
select(from_country,
jury_points)
head(to_poland)
scandinavia <- votes_complete_agg |>
select(to_country, from_country, year, jury_points, tele_points) |>
filter(to_country == "Sweden" | to_country == "Denmark" | to_country == "Norway") |>
filter(from_country == "Sweden" | from_country == "Denmark" | from_country == "Norway")
scandinavia
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "bottom") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total") +
scale_color_manual(name = "Legend", values = c("Combined" = "black")) +
theme(legend.position = "right")
theme_set(theme_bw())
scandinavia |>
ggplot(aes(x = year)) +
xlim(2018,2023) +
geom_line(aes(y = jury_points), linetype = 1) +
geom_line(aes(y = tele_points), linetype = 44) +
geom_point(aes(y = jury_points), shape = 16) +
geom_point(aes(y = tele_points), shape = 17) +
theme(legend.position = "bottom") +
facet_grid(from_country ~ to_country) +
labs(x = "year",
y = "point_total")
load(tmax.Rda)
load("tmax.Rda")
load("tmax.Rda")
load("tmin.Rda")
load("tmax.Rda")
load("tmin.Rda")
tmin
load("tmax.Rda")
load("tmin.Rda")
tmax
load("tmax.Rda")
load("tmin.Rda")
load("pcrp.Rda")
load("tmax.Rda")
load("tmin.Rda")
load("prcp.Rda")
load("tmax_tmin_prcp.Rda")
tmax |>
glimpse()
tmax_tmin_prcp |>
glimpse()
tmax |>
glimpse()
library(tidyr)
# Assuming df is your original data frame
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "(.{2})(.{2})")  # Assuming the two-letter patterns
library(tidyr)
# Assuming df is your original data frame
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "([A-Za-z]{3})([A-Za-z]{2})(\\d{2})(\\d{2})")
tmax_new
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "([A-Za-z]{3})\\.([A-Za-z]{2})\\.(\\d{2})\\.(\\d{2})")
tmax_new
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "?(.*).(.).(.*)")
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = ("[A-Za-z]{3})\\.([A-Za-z]{2})\\.(\\d{2})\\.(\\d{2})"))
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = ("[A-Za-z]{3})\\.([A-Za-z]{2})\\.(\\d{2})\\.(\\d{2})"))
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = ("[A-Za-z]{3}).([A-Za-z]{2}).(d{2}).(d{2})"))
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = ("([A-Za-z]{3}).([A-Za-z]{2}).(d{2}).(d{2})"))
tmax_new
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = ("([A-Za-z]{3})\\.([A-Za-z]{2}).(d{2}).(d{2})"))
tmax_new
load("~/Desktop/spring 2024/stat comp/hw2/tmax_tmin_prcp.Rda")
load("~/Desktop/spring 2024/stat comp/hw2/tmax_tmin_prcp.Rda")
load("tmax_tmin_prcp.Rda")
tmax_tmin_prcp
tmax |>
glimpse()
tmin |>
glimpse()
tmax |>
glimpse()
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`([A-Za-z]{3})\\.([A-Za-z]{2})\\.(\\d{2})\\.(\\d{2})`")
tmax_new
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`([A-Za-z]{3})\\.([A-Za-z]{2})\\.(\\d{2})\\.(\\d{2})`",
values_to = "rank")
tmax_new
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`([A-Za-z]{3})\\.([A-Za-z]{2})\\.(\\d{2})\\.(\\d{2})`",
values_to = "tmax")
tmax_new
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state"),
names_pattern = "^.{0,3}",
values_to = "tmax")
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state"),
names_pattern = ".{0,3}$",
values_to = "tmax")
tmax |>
glimpse
tmax |>
glimpse()
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state"),
names_pattern = ".{0,3}$""`([A-Za-z]{3}),([A-Za-z]{2}),(\\d{2}),(\\d{2})`",
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = ".{0,3}$""`([A-Za-z]{3}),([A-Za-z]{2}),(\\d{2}),(\\d{2})`",
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`([A-Za-z]{3}),([A-Za-z]{2}),(\\d{2}),(\\d{2})`",
values_to = "tmax")
tmax_new
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df %>%
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`([A-Za-z]+),([A-Za-z]+),(\\d{2}),(\\d{2})`")
# View the resulting data frame
print(df_long)
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df %>%
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`[A-Za-z]+,[A-Za-z]+,[0-9]+,[0-9]+`")
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df %>%
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`(.*),(.*),(.*),(.*)'")
# View the resulting data frame
print(df_long)
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df %>%
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`(.*),(.*),(.*),(.*)`")
# View the resulting data frame
print(df_long)
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df %>%
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`(.*),(.*),(.*),(.*)`")
# View the resulting data frame
print(df_long)
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "`(.*),(.*),(.*),(.*)`")
# View the resulting data frame
print(df_long)
tmax_new <- tmax |>
pivot_longer(cols = everything(),
names_to = c("state", "city", "day", "month"),
names_pattern = "``(.*),(.*),(.*),(.*)``",
values_to = "tmax")
tmax_new
tmax |>
glimpse()
# Sample data
df <- data.frame(
`phi,pa,07,04` = 1:5,
`phi,pa,07,05` = 6:10,
`theta,ta,08,06` = 11:15
)
# Assuming df is your original data frame
df_long <- df |>
pivot_longer(cols = everything(),
names_to = c("city", "state", "day", "month"),
names_pattern = "`(.*),(.*),(.*),(.*)`")
# View the resulting data frame
print(df_long)
