data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8) |>
count()
data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8) |>
count()
data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8)
data_with_rf_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8)
data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8)
data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8) |>
count()
install.packages("kknn")
install.packages("kknn")
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
load(kknn)
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
load("kknn")
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
library(kknn)
knn_parsnip <- nearest_neighbor(weight_func = "rectangular", neighbors = 3) |>
set_engine("kknn") |>
set_mode("regression")
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
library(kknn)
knn_parsnip <- nearest_neighbor(weight_func = "rectangular", neighbors = 3) |>
set_engine("kknn") |>
set_mode("regression")
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
library(kknn)
knn_parsnip <- nearest_neighbor(weight_func = "rectangular", neighbors = 3) |>
set_engine("kknn") |>
set_mode("regression")
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
library(kknn)
knn_parsnip <- nearest_neighbor(neighbors = 3) |>
set_engine("kknn") |>
set_mode("regression")
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
library(kknn)
knn_parsnip <- nearest_neighbor(neighbors = 3) |>
set_engine("kknn")
#| message: FALSE
#| warning: FALSE
library(tidyverse)
library(tidymodels)
theme_set(theme_bw())
tidymodels_prefer()
load("theoffice_new.Rda")
theoffice_new |>
glimpse()
set.seed(12)
theoffice_split <- initial_split(theoffice_new,
prop = 0.8)
theoffice_train <- theoffice_split |>
training()
theoffice_test <- theoffice_split |>
testing()
# INSERT PARSNIP DEFINITION HERE
parsnip_lm <- linear_reg() |>
set_engine("lm") |>
set_mode("regression")
# INSERT WORKFLOW DEFINITION HERE
lm_workflow <- workflow() |>
add_model(parsnip_lm) |>
add_formula(imdb_rating ~ season)
# INSERT MODEL FITTING CODE HERE
lm_fit <- lm_workflow |>
fit(theoffice_train)
lm_fit |>
tidy()
lm_fit |>
tidy() |>
arrange(desc(estimate)) |>
head(2)
lm_fit |>
tidy() |>
arrange(estimate) |>
head(1)
library(ggplot2)
theme_set(theme_bw())
lm_fit |>
tidy() |>
filter(term != "(Intercept)") |>
ggplot(aes(x = estimate, y = term)) +
geom_bar(stat = "identity") +
labs(x = "estimate",
y = "term")
# INSERT PARSNIP DEFINITION HERE
parsnip_lasso <- linear_reg(penalty = 0.01) |>
set_engine("glmnet") |>
set_mode("regression")
# INSERT RECIPW DEFINITION HERE
recipe_office <- recipe(data = theoffice_train,
formula = imdb_rating ~ .) |>
step_other(director, threshold = 0.02, other = "Other") |>
step_dummy(all_nominal_predictors()) |>
step_normalize(all_predictors())
# INSERT WORKFLOW DEFINITION HERE
lasso_workflow <- workflow() |>
add_model(parsnip_lasso) |>
add_recipe(recipe_office)
# INSERT MODEL FITTING CODE HERE
lasso_fit <- lasso_workflow |>
fit(theoffice_train)
# INSERT SOLUTION HERE
lasso_fit |>
tidy() |>
mutate(characters = str_extract(term, "(?<=dialog_share_).+")) |>
filter(!is.na(characters)) |>
select(characters, estimate) |>
arrange(desc(estimate)) |>
head()
lasso_fit |>
tidy() |>
mutate(writer = str_extract(term, "(?<=writer_).+")) |>
filter(!is.na(writer)) |>
select(writer, estimate) |>
arrange(desc(estimate)) |>
head()
lasso_fit |>
tidy() |>
mutate(director = str_extract(term, "(?<=director_).+")) |>
filter(!is.na(director)) |>
select(director, estimate) |>
arrange((estimate)) |>
head()
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
parsnip_rf <- rand_forest() |>
set_engine("ranger") |>
set_mode("regression")
rf_workflow <- workflow() |>
add_model(parsnip_rf) |>
add_formula(imdb_rating ~ .)
rf_fit <- rf_workflow |>
fit(theoffice_train)
rf_predictions <- rf_fit |>
predict(theoffice_test)
data_with_rf_predictions <- theoffice_test |>
bind_cols(rf_predictions)
data_with_rf_predictions |>
arrange(desc(imdb_rating)) |>
head()
data_with_rf_predictions |>
arrange((imdb_rating)) |>
head()
# INSERT SOLUTION HERE (parsnip, Workflow, fitting, etc.)
library(kknn)
knn_parsnip <- nearest_neighbor(neighbors = 3) |>
set_engine("kknn") |>
set_mode("regression")
knn_workflow <- workflow() |>
add_model(knn_parsnip) |>
add_formula(imdb_rating ~ .)
knn_fit <- knn_workflow |>
fit(data = theoffice_train)
knn_predictions <- knn_fit |>
predict(theoffice_test)
data_with_knn_predictions <- theoffice_test |>
bind_cols(knn_predictions)
data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating>8) |>
count()
data_with_knn_predictions |>
arrange((imdb_rating)) |>
filter(imdb_rating < 7.5) |>
count()
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
pivot_longer(cols = starts_with("predict"),
names_to = "Model",
values_to = "Predicted")
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
pivot_longer(cols = starts_with("..."),
names_to = "Model",
values_to = "Predicted")
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
pivot_longer(cols = starts_with("..."),
names_to = "Model",
values_to = "Predicted")
results_long
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(...2 = KNN)
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(...2 = KNN) |>
pivot_longer(cols = starts_with("..."),
names_to = "Model",
values_to = "Predicted")
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(KNN = ...2) |>
pivot_longer(cols = starts_with("..."),
names_to = "Model",
values_to = "Predicted")
results_long
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(KNN = ...2)
results_long
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(KNN = ...2,
RF = ...3,
LM = ...4,
Lasso = ...5)
results_long
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(KNN = ...2,
RF = ...3,
LM = ...4,
Lasso = ...5) |>
|>
predictions <- bind_cols(
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred)
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(KNN = ...2,
RF = ...3,
LM = ...4,
Lasso = ...5) |>
pivot_longer(cols = c(KNN,RF,LM,Lasso),
names_to = "Model",
values_to = "Predicted")
results_long
predictions <- bind_cols(
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(LM = ...2,
Lasso = ...3,
RF = ...4,
KNN = ...5) |>
pivot_longer(cols = c(LM,Lasso,RF,KNN),
names_to = "Model",
values_to = "Predicted")
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model, scales = "free") +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
coord_obs_pred() +  # Add coord_obs_pred() for better visualization
theme_minimal()
predictions <- bind_cols(
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(LM = ...2,
Lasso = ...3,
RF = ...4,
KNN = ...5) |>
pivot_longer(cols = c(LM,Lasso,RF,KNN),
names_to = "Model",
values_to = "Predicted")
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model) +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
coord_obs_pred() +  # Add coord_obs_pred() for better visualization
theme_minimal()
predictions <- bind_cols(
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(LM = ...2,
Lasso = ...3,
RF = ...4,
KNN = ...5) |>
pivot_longer(cols = c(LM,Lasso,RF,KNN),
names_to = "Model",
values_to = "Predicted")
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model) +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
theme_minimal()
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model, scales = "free") +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
theme_minimal()
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model, scales = "free") +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating")
predictions <- bind_cols(
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename(1 = ...2,
predictions <- bind_cols(
predict(lm_fit, new_data = theoffice_test) |> pull(.pred),
predict(lasso_fit, new_data = theoffice_test) |> pull(.pred),
predict(rf_fit, new_data = theoffice_test) |> pull(.pred),
predict(knn_fit, new_data = theoffice_test) |> pull(.pred),
)
results <- bind_cols(
theoffice_test |> select(imdb_rating),
predictions
)
results_long <- results |>
rename("1" = ...2,
"2" = ...3,
"3" = ...4,
"4" = ...5) |>
pivot_longer(cols = c("1","2","3","4"),
names_to = "Model",
values_to = "Predicted")
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model, scales = "free") +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating")
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model, scales = "free") +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
coord_obs_pred()
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point() +
facet_wrap(~ Model) +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
coord_obs_pred()
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point(alpha = 0.5) +
facet_wrap(~ Model) +
labs(title = "Predicted IMDb Rating vs. True IMDb Rating",
x = "True IMDb Rating",
y = "Predicted IMDb Rating") +
coord_obs_pred()
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point(alpha = 0.5) +
facet_wrap(~ Model) +
labs(y = "prediction") +
coord_obs_pred()
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point(alpha = 0.5) +
facet_wrap(~ Model) +
labs(y = "prediction") +
coord_obs_pred() +
geom_abline(intercept = 0, slope = 1, linetype = "dotted", color = "red")
ggplot(results_long, aes(x = imdb_rating, y = Predicted)) +
geom_point(alpha = 0.5) +
facet_wrap(~ Model) +
labs(y = "prediction") +
coord_obs_pred() +
geom_abline(intercept = 0, slope = 1, linetype = "dotted", color = "red")
